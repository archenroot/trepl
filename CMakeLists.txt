cmake_minimum_required(VERSION 2.6)

INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}")
INCLUDE_DIRECTORIES("${LUA_INCDIR}")
LINK_DIRECTORIES("${LUA_LIBDIR}")

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckFunctionExists)
INCLUDE(CheckLibraryExists)

IF (UNIX OR NOT WIN32)
  CHECK_INCLUDE_FILES(stdlib.h HAVE_STDLIB_H)
ENDIF (UNIX OR NOT WIN32)

CONFIGURE_FILE("utils.c" "${CMAKE_CURRENT_SOURCE_DIR}/treputils.c")
CONFIGURE_FILE("th" "/usr/bin/th" COPYONLY)
SET(src 
  "${CMAKE_CURRENT_SOURCE_DIR}/readline.c"
  "${CMAKE_CURRENT_SOURCE_DIR}/treputils.c" )

SET(luasrc 
  "${CMAKE_CURRENT_SOURCE_DIR}/init.lua"
  "${CMAKE_CURRENT_SOURCE_DIR}/colorize.lua"
  "${CMAKE_CURRENT_SOURCE_DIR}/colors.lua" )

# When using MSVC
IF(MSVC)
  # we want to respect the standard, and we are bored of those **** .
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_DEPRECATE=1)
ENDIF(MSVC)

ADD_LIBRARY("trepl" MODULE ${src})
SET_TARGET_PROPERTIES("trepl" PROPERTIES
  PREFIX "lib"
  IMPORT_PREFIX "lib" )

IF(APPLE)
  SET_TARGET_PROPERTIES("trepl" PROPERTIES
    LINK_FLAGS "-undefined dynamic_lookup")
ENDIF()

INSTALL(FILES ${luasrc} DESTINATION ${LUADIR}/trepl)

INSTALL(TARGETS trepl
  LIBRARY DESTINATION ${LIBDIR} )

IF(LUALIB)
  TARGET_LINK_LIBRARIES(trepl ${LUALIB})
ENDIF()

